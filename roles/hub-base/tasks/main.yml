- name: set hostname
  hostname:
    name: "{{ system_hostname }}"
  become: true

- name: set system timezone to UTC
  timezone:
    name: UTC

# system specific tasks
- name: 
  include_tasks: "{{ ansible_facts['os_family']|lower }}_pkgs.yml"

# NOTE: Cron not really used for base NRTS install
# Only if further configured for STATION or HUB use
- name: set cron service to running and enabled
  systemd:
    name: crond
    state: started
    enabled: yes
  become: true

- name: stop and disable chrony (going to use ntp)
  # ignore errors in case chrony not installed
  service:
    name: chronyd.service
    state: stopped
    enabled: no
  become: true
  ignore_errors: True


- name: make sure local subnets can query ntp deamon
  lineinfile:
    path: /etc/ntp.conf
    regexp: "^ *restrict *127.0.0.1"
    insertafter: "^ *restrict"
    line: 'restrict 127.0.0.1'
    state: present
    backup: yes
  become: true

- name: set ntp service to running and enabled
  systemd:
    name: ntpd.service
    state: started
    enabled: yes
  become: true

- name: Set PermitRootLogin to 'no'
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^ *PermitRootLogin .* *yes'
    replace: 'PermitRootLogin no'
    backup: yes
  become: true


- name: NETOPS specific Create groups for user nrts so that shared resources are accessed appropriately
  group:
    name: nrts 
    local: yes
    gid: 4000
    state: present
    system: yes
  become: yes
  tags:
    - usermod

####################################
# Generate password with python:
#   python3 -c "from passlib.hash import sha512_crypt; import getpass; print(sha512_crypt.using(rounds=5000).hash(getpass.getpass()))"
# is tcsh location system specific?
# creating tunnel user even though only used on HUB systems that use ssh remote tunnels to pull from station
- name: Make sure user NRTS is in local user DB
  lineinfile:
    path: /etc/passwd
    regexp: '^nrts:'
    line: "nrts:x:4000:4000:NRTS System User:{{ nrts_home_dir }}:/bin/tcsh"
  become: yes
  tags:
    users

- name: Set NRTS user password
  user:
    name: nrts
    password: '$6$2HD/LDqZQW8pofXt$Frj9Fos6VJBT12e/NTeyd3kQdEGH4drWDSBETxx2OifFk215rBr9Ta0xdHcER.O.u/aQ3xI.OXaDZbBkxpeIy0'
    state: present
  become: yes
  tags:
    users

- name: Create user NRTS home dir (if not exists)
  file:
    name: "{{ nrts_home_dir }}"
    state: directory
    mode: 02755
    owner: nrts
    group: nrts
  become: yes
  tags:
    users

- name: create other NRTS user(s)
  user:
    name: tunnel
    password: '$6$XKDZdmWCYmxoia/I$o2WRNFAr7k1a0Fa5Nim1LzQYScCFa33AUsl8JCeXjtsX.hJt.dfMfmhv7DMgKi/4LfJLe2FUfcTGUF4AHMZuL.'
    shell: /bin.tcsh
    home: /usr/tunnel
    generate_ssh_key: yes
    state: present
    local: yes
  become: true
  tags:
    users

# requires nrts_home_dir
- name: install custom nrts sudoers conf file
  template:
    src: nrts-sudoers.{{ ansible_facts['os_family']|lower }}.j2
    dest: /etc/sudoers.d/nrts
    owner: root
    group: root
    mode: 0644
    backup: yes
  become: true

# requires nrts_home_dir
- name: update perms on homedirs
  file:
    path: "{{ nrts_home_dir }}"
    state: directory
    owner: nrts
    group: nrts
    mode: "g+rwx"
  become: true
  tags:
    nrtsbuild

# requires nrts_home_dir 
- name: install custom NRTS rsyslog conf
  template:
    src: nrts-rsyslog.redhat.j2
    dest: /etc/rsyslog.d/nrts.conf
    owner: root
    group: root
    mode: 0644
    backup: yes
  become: true

- name: make sure rsyslogd running and enabled with nrts custom conf
  systemd:
    name: rsyslog
    state: restarted
    enabled: yes
  become: true

- name: build nrts software
  import_tasks: nrtsbuild.yml
  vars:
    build_root: "{{ nrts_home_dir }}"
    deploy_root: "{{ nrts_home_dir }}"
  tags:
    nrtsbuild

- name: build 3rd party (IRIS) miniseed utilities
  import_tasks: miniseed_utils.yml
  vars:
    build_root: "/usr/local/src"
    deploy_root: "/usr/local/bin"
  tags:
    - miniseed